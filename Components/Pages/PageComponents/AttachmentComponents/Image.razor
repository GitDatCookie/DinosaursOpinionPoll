@inherits QuestionaireComponentBase

@if (!IsEditable)
{
    <MudGrid Class="d-flex justify-center align-center mt-4" Style="width: 100%; overflow: auto;">
        <MudImage Src="@ViewModel.Url"
                  ObjectFit="ObjectFit.ScaleDown"
                  ObjectPosition="ObjectPosition.Center"
                  Alt="Image"
                  Style="max-width: 100%; height: auto;" />
    </MudGrid>

    @if (IsItemEditable)
    {
        <MudGrid Class="d-flex pl-5 mt-6">
            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@(()=>DeleteImageAsync())">
                Delete Image
            </MudButton>
            <MudSpacer />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(()=>IsEditable=true)" Class="ml-5">
                Edit Image
            </MudButton>
        </MudGrid>
    }
}
else
{
    <ImageTemplate TemplateViewModel="ViewModel" OnItemEdited="HandleItemEdited" />
}


@code {
    public new ImageViewModel ViewModel
    {
        get => (ImageViewModel)base.ViewModel;
        set => base.ViewModel = value;
    }

    [Parameter] public bool IsItemEditable { get; set; }

    private void HandleItemEdited(bool edit)
    {
        IsEditable = edit;
    }

    private async Task DeleteImageAsync()
    {
        await ConfirmDeleteAsync(ViewModel.Id, EComponentType.Image, EQuestionComponentType.None);
    }
}