@using AI_Project.Services
@inject UserService userService
@inject ISnackbar snackbar

<MudDialog>
    <DialogContent>
            <EditForm id="editFormId" Context=EditContext Model="model" OnValidSubmit="OnValidSubmit">
                <MudTextField 
                    Label="User name" 
                    HelperText="Choose a user name"
                    @bind-Value="model.UserName" 
                    For="@(() => model.UserName)"/>
                <MudTextField 
                    Class="mt-3"
                    Label="Password" 
                    HelperText="Choose a strong password" 
                    @bind-Value="model.Password" 
                    For="@(() => model.Password)" 
                    InputType="InputType.Password"/>               
             </EditForm>
    </DialogContent>
    <DialogActions>
        @if (!string.IsNullOrEmpty(model.Password) && !string.IsNullOrEmpty(model.UserName))
        {
            <MudButton form="editFormId" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" >Login</MudButton>
        }
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance? MudDialog { get; set; }

    AdminUserViewModel model = new AdminUserViewModel();
    (bool, string) loginValue;

    private async Task OnValidSubmit(EditContext context)
    {
        loginValue = await userService.LoginUserAsync(model);
        if (!loginValue.Item1)
        {
            snackbar.Add($"{loginValue.Item2}", Severity.Error);
        }
        if (loginValue.Item1)
        {
            snackbar.Add($"{loginValue.Item2}", Severity.Success);
            MudDialog?.Close(DialogResult.Ok(true));
        }

    }
}