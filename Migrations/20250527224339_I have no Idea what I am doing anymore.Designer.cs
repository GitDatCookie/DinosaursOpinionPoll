// <auto-generated />
using System;
using AI_Project.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AI_Project.Migrations
{
    [DbContext(typeof(AI_ProjectDbContext))]
    [Migration("20250527224339_I have no Idea what I am doing anymore")]
    partial class IhavenoIdeawhatIamdoinganymore
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AI_Project.Models.OrderModels.RandomGroupModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RandomGroupType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RandomGroupModel");
                });

            modelBuilder.Entity("AI_Project.Models.QuestionaireComponentModels.QuestionaireComponentModelBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<bool>("IsRandomised")
                        .HasColumnType("bit");

                    b.Property<Guid?>("QuestionairePageModelPageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RandomGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionairePageModelPageID");

                    b.HasIndex("RandomGroupId");

                    b.ToTable("QuestionaireComponentModelBase");

                    b.HasDiscriminator().HasValue("QuestionaireComponentModelBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.AdminUserComponentModels.QuestionaireModel", b =>
                {
                    b.Property<Guid>("QuestionaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminUserModelLoginId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PublicToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionaireTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionaireId");

                    b.HasIndex("AdminUserModelLoginId");

                    b.ToTable("QuestionaireModels");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.AdminUserComponentModels.QuestionairePageModel", b =>
                {
                    b.Property<Guid>("PageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRandomised")
                        .HasColumnType("bit");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<Guid?>("QuestionaireModelQuestionaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RandomGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PageID");

                    b.HasIndex("QuestionaireModelQuestionaireId");

                    b.HasIndex("RandomGroupId");

                    b.ToTable("QuestionairePages");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.AdminUserModel", b =>
                {
                    b.Property<Guid>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginId");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.SubjectUserModel", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ControlGroup")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("SubjectUsers");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.SubjectUserModelComponents.AnswerModel", b =>
                {
                    b.Property<Guid>("AnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AnswerID");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.SubjectUserModelComponents.EmailModel", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Email");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("AnswerModelSubjectUserModel", b =>
                {
                    b.Property<Guid>("AnswersAnswerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AnswersAnswerID", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("AnswerModelSubjectUserModel");
                });

            modelBuilder.Entity("AI_Project.Models.QuestionaireComponentModels.FreeTextModel", b =>
                {
                    b.HasBaseType("AI_Project.Models.QuestionaireComponentModels.QuestionaireComponentModelBase");

                    b.Property<string>("FreeText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("FreeTextModel");
                });

            modelBuilder.Entity("AI_Project.Models.QuestionaireComponentModels.ImageModel", b =>
                {
                    b.HasBaseType("AI_Project.Models.QuestionaireComponentModels.QuestionaireComponentModelBase");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ImageModel");
                });

            modelBuilder.Entity("AI_Project.Models.QuestionaireComponentModels.QuestionModel", b =>
                {
                    b.HasBaseType("AI_Project.Models.QuestionaireComponentModels.QuestionaireComponentModelBase");

                    b.Property<Guid?>("AdminUserModelLoginId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComponentColour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.HasIndex("AdminUserModelLoginId");

                    b.HasDiscriminator().HasValue("QuestionModel");
                });

            modelBuilder.Entity("AI_Project.Models.QuestionaireComponentModels.VideoModel", b =>
                {
                    b.HasBaseType("AI_Project.Models.QuestionaireComponentModels.QuestionaireComponentModelBase");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("QuestionaireComponentModelBase", t =>
                        {
                            t.Property("Path")
                                .HasColumnName("VideoModel_Path");
                        });

                    b.HasDiscriminator().HasValue("VideoModel");
                });

            modelBuilder.Entity("AI_Project.Models.QuestionaireComponentModels.QuestionaireComponentModelBase", b =>
                {
                    b.HasOne("AI_Project.Models.UserModels.AdminUserComponentModels.QuestionairePageModel", null)
                        .WithMany("Items")
                        .HasForeignKey("QuestionairePageModelPageID");

                    b.HasOne("AI_Project.Models.OrderModels.RandomGroupModel", "RandomGroup")
                        .WithMany("QuestionaireComponents")
                        .HasForeignKey("RandomGroupId");

                    b.Navigation("RandomGroup");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.AdminUserComponentModels.QuestionaireModel", b =>
                {
                    b.HasOne("AI_Project.Models.UserModels.AdminUserModel", null)
                        .WithMany("Questionaires")
                        .HasForeignKey("AdminUserModelLoginId");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.AdminUserComponentModels.QuestionairePageModel", b =>
                {
                    b.HasOne("AI_Project.Models.UserModels.AdminUserComponentModels.QuestionaireModel", null)
                        .WithMany("PageList")
                        .HasForeignKey("QuestionaireModelQuestionaireId");

                    b.HasOne("AI_Project.Models.OrderModels.RandomGroupModel", "RandomGroup")
                        .WithMany("QuestionairePages")
                        .HasForeignKey("RandomGroupId");

                    b.Navigation("RandomGroup");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.SubjectUserModelComponents.AnswerModel", b =>
                {
                    b.HasOne("AI_Project.Models.QuestionaireComponentModels.QuestionModel", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("AnswerModelSubjectUserModel", b =>
                {
                    b.HasOne("AI_Project.Models.UserModels.SubjectUserModelComponents.AnswerModel", null)
                        .WithMany()
                        .HasForeignKey("AnswersAnswerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AI_Project.Models.UserModels.SubjectUserModel", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AI_Project.Models.QuestionaireComponentModels.QuestionModel", b =>
                {
                    b.HasOne("AI_Project.Models.UserModels.AdminUserModel", null)
                        .WithMany("Questions")
                        .HasForeignKey("AdminUserModelLoginId");
                });

            modelBuilder.Entity("AI_Project.Models.OrderModels.RandomGroupModel", b =>
                {
                    b.Navigation("QuestionaireComponents");

                    b.Navigation("QuestionairePages");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.AdminUserComponentModels.QuestionaireModel", b =>
                {
                    b.Navigation("PageList");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.AdminUserComponentModels.QuestionairePageModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AI_Project.Models.UserModels.AdminUserModel", b =>
                {
                    b.Navigation("Questionaires");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("AI_Project.Models.QuestionaireComponentModels.QuestionModel", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
